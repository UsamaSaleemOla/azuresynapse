{
	"name": "warburgCreateDeltaTableFromCsv",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "deletesourcefile1",
						"type": "DatasetReference"
					},
					"name": "csvFile"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					},
					"name": "deltaTable"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink2"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink3"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink4"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink5"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink6"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink7"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink8"
				},
				{
					"linkedService": {
						"referenceName": "AzureDataLakeStorage",
						"type": "LinkedServiceReference"
					},
					"name": "sink9"
				}
			],
			"transformations": [
				{
					"name": "modifyDateColumn"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> csvFile",
				"csvFile derive(ModifyDate = currentTimestamp()) ~> modifyDateColumn",
				"modifyDateColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'warburgdeltafolder',",
				"     folderPath: 'organizations30_delete',",
				"     mergeSchema: true,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> deltaTable",
				"modifyDateColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'warburgdeltafolder',",
				"     folderPath: 'organizations29_delete',",
				"     mergeSchema: true,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1",
				"modifyDateColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'warburgdeltafolder',",
				"     folderPath: 'organizations28_delete',",
				"     mergeSchema: true,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink2",
				"modifyDateColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'warburgdeltafolder',",
				"     folderPath: 'organizations27_delete',",
				"     mergeSchema: true,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink3",
				"modifyDateColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'warburgdeltafolder',",
				"     folderPath: 'organizations26_delete',",
				"     mergeSchema: true,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink4",
				"modifyDateColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'warburgdeltafolder',",
				"     folderPath: 'organizations25_delete',",
				"     mergeSchema: true,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink5",
				"modifyDateColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'warburgdeltafolder',",
				"     folderPath: 'organizations24_delete',",
				"     mergeSchema: true,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink6",
				"modifyDateColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'warburgdeltafolder',",
				"     folderPath: 'organizations23_delete',",
				"     mergeSchema: true,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink7",
				"modifyDateColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'warburgdeltafolder',",
				"     folderPath: 'organizations22_delete',",
				"     mergeSchema: true,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink8",
				"modifyDateColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'warburgdeltafolder',",
				"     folderPath: 'organizations21_delete',",
				"     mergeSchema: true,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink9"
			]
		}
	}
}